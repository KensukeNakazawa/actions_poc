name: poc for build matrix

on:
  push:
    branches:
      - main
    tags:
      - "!*"
  workflow_dispatch:

jobs:
  determin-change-dir:
    runs-on: ubuntu-latest

    outputs:
      change_dirs: ${{ steps.filter.outputs.change_dirs }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: path filter
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: .github/constants/path-filter.yaml
          base: main

      - name: filter
        id: filter
        run: |
          echo '${{ toJSON(steps.changes.outputs) }}' | jq '. | to_entries[] | select(.value == "true") | .key'
          filterd_change_dirs=$(echo '${{ toJSON(steps.changes.outputs) }}' | jq '. | to_entries[] | select(.value == "true") | .key')
          echo $filterd_change_dirs
          echo "::set-output name=change_dirs::$(echo $filterd_change_dirs | jq -sc .)"

      - name: echo output
        run: |
          echo '${{ steps.filter.outputs.change_dirs }}'
          echo ${{ steps.filter.outputs.change_dirs }}

  echo-build-matrix:
    needs: determin-change-dir
    runs-on: ubuntu-latest

    if: ${{ needs.determin-change-dir.outputs.change_dirs }} != '[]'

    strategy:
      matrix:
        change_dirs: ${{ fromJson(needs.determin-change-dir.outputs.change_dirs) }}

    steps:
      - name: echo change dirs
        run: |
          echo "change dirs"
          echo ${{ matrix.change_dirs }}

      - name: set env
        id: set-env
        run: |
          ENV=$(echo "${{ matrix.change_dirs }}" | cut -d '/' -f1)
          echo "set env"
          echo $ENV
          echo "::set-output name=target_poc::$ENV"
          

      - name: Set environment variables for each env
        run: |
          yq "with_entries(select(.key == \"${{ steps.set-env.outputs.target_poc }}\")) | .${{ steps.set-env.outputs.target_poc }}" .github/constants/target-poc.yaml -o props | tr -d " " >> $GITHUB_ENV

#      - name: Set environment variables for each env
#        id: set-poc-value
#        uses: mikefarah/yq@master
#        #TODO: これが出る ->  Error: open .github/constants/target-poc.yaml: no such file or directory
#        with:
#          cmd: yq .${{ steps.set-env.outputs.target_poc }} .github/constants/target-poc.yaml -o props | tr -d " " >> $GITHUB_ENV \
#               pwd \
#               echo "::set-output name=SECRET_POC::${{ env.SECRET_POC }}" \
#               echo "::set-output name=SECRET_POC2::${{ env.SECRET_POC2 }}"

      - name: echo envs
        run: |
          echo "Echo Environment"
          echo ${{ env.SECRET_POC }}
          echo ${{ steps.set-poc-value.outputs.SECRET_POC }}
          echo ${{ steps.set-poc-value.outputs.SECRET_POC2 }}
